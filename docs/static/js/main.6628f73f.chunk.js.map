{"version":3,"sources":["utils/utils.ts","utils/searchLogic.ts","components/SettingsOverlay.tsx","components/Alternatives.tsx","components/IngredientWithAvailability.tsx","components/CocktailCard.tsx","components/variousComponents.tsx","components/BigAppWrapper.tsx","utils/storage.ts","components/App.tsx","index.tsx"],"names":["DISCREET","domain","split","reverse","join","flattenIngredientName","ingredientNameWithLinks","map","part","text","parseSpacedStr","s","trim","toLowerCase","filter","_","length","useInputTextSetup","useState","value","setValue","useCallback","e","target","useInputCheckboxSetup","checked","SettingsOverlay","cocktails","setSearchResults","ingredientsAvailability","includeStr","includeStrOnChange","excludeStr","excludeStrOnChange","excludeNo","setExcludeNo","excludeMaybe","setExcludeMaybe","onSubmit","preventDefault","searchCriteria","includes","excludes","ingredientNames","ingredients","some","name","every","word","performSearch","style","background","padding","top","display","flexFlow","gap","minWidth","type","onChange","placeholder","id","htmlFor","Alternatives","alternatives","color","IngredientWithAvailability","ingredientName","availability","setIngredientAvailability","incrementAvailability","textDecoration","i","href","margin","borderRadius","cursor","backgroundColor","undefined","translateAvailabilityAsColor","onClick","CocktailCard","cocktail","maxWidth","height","float","src","imgSrc","alt","fontSize","marginLeft","url","rel","amount","alternateIngredientsNames","CocktailsTable","ingredientsFilterMode","width","justifyContent","BigAppWrapper","JSON","parse","localStorage","getItem","setIngredientsAvailability","setIngredientsFilterMode","searchResults","newMap","setTimeout","setItem","stringify","persistIngredientsAvailability","App","db","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6628f73f.chunk.js","sourcesContent":["import { Availability, Ingredient } from \"./types\";\n\nexport const DISCREET = false;\n\nexport function translateAvailabilityAsColor(availability: Availability) {\n  switch (availability) {\n    case \"no\":\n      return \"red\";\n    case \"maybe\":\n      return \"orange\";\n    case \"yes\":\n      return \"green\";\n    case null:\n    case undefined:\n      return \"gray\";\n  }\n}\n\nfunction reverse(s: string) {\n  return s.split(\"\").reverse().join(\"\");\n}\n\n// eslint-disable-next-line no-useless-concat\nexport const domain = reverse(\"apliatkcoc\") + \"rtyapp.com\";\n\nexport function flattenIngredientName(\n  ingredientNameWithLinks: Ingredient[\"ingredientNameWithLinks\"]\n) {\n  return ingredientNameWithLinks\n    .map((part) => {\n      if (typeof part === \"string\") {\n        return part;\n      } else {\n        return part.text;\n      }\n    })\n    .join(\" \");\n}\n","import { AvailabilitiesMap, Cocktail } from \"./types\";\nimport { flattenIngredientName } from \"./utils\";\n\nfunction parseSpacedStr(s: string) {\n  return s\n    .trim()\n    .toLowerCase()\n    .split(\" \")\n    .filter((_) => _.trim().length);\n}\n\nexport function performSearch({\n  cocktails,\n  ingredientsAvailability,\n  searchCriteria,\n}: {\n  cocktails: Cocktail[];\n  ingredientsAvailability: AvailabilitiesMap;\n  searchCriteria: {\n    includeStr: string;\n    excludeStr: string;\n    excludeNo: boolean;\n    excludeMaybe: boolean;\n  };\n}): Cocktail[] {\n  const { includeStr, excludeStr, excludeNo, excludeMaybe } = searchCriteria;\n  const includes = parseSpacedStr(includeStr);\n  const excludes = parseSpacedStr(excludeStr);\n  return cocktails.filter(({ ingredients }) => {\n    const ingredientNames = ingredients.map((_) =>\n      flattenIngredientName(_.ingredientNameWithLinks)\n    );\n\n    if (\n      excludeNo &&\n      ingredientNames.some((name) => ingredientsAvailability[name] === \"no\")\n    ) {\n      return false;\n    }\n    if (\n      excludeMaybe &&\n      ingredientNames.some((name) => ingredientsAvailability[name] === \"maybe\")\n    ) {\n      return false;\n    }\n    if (\n      includes.length &&\n      !includes.every((word) =>\n        ingredientNames.some((name) => name.toLowerCase().includes(word))\n      )\n    ) {\n      return false;\n    }\n    if (\n      excludes.length &&\n      !excludes.every((word) =>\n        ingredientNames.every((name) => !name.toLowerCase().includes(word))\n      )\n    ) {\n      return false;\n    }\n    return true;\n  });\n}\n","import React, { useCallback, useState } from \"react\";\nimport { performSearch } from \"../utils/searchLogic\";\nimport { AvailabilitiesMap, Cocktail } from \"../utils/types\";\nimport { DISCREET } from \"../utils/utils\";\n\nfunction useInputTextSetup() {\n  const [value, setValue] = useState<string>(\"\");\n  const onChange = useCallback((e) => {\n    setValue(e.target.value);\n  }, []);\n  return [value, onChange] as const;\n}\n\nfunction useInputCheckboxSetup() {\n  const [value, setValue] = useState<boolean>(false);\n  const onChange = useCallback((e) => {\n    setValue(e.target.checked);\n  }, []);\n  return [value, onChange] as const;\n}\n\nexport function SettingsOverlay({\n  cocktails,\n  setSearchResults,\n  ingredientsAvailability,\n}: {\n  cocktails: Cocktail[];\n  setSearchResults: (res: Cocktail[]) => void;\n  ingredientsAvailability: AvailabilitiesMap;\n}) {\n  const [includeStr, includeStrOnChange] = useInputTextSetup();\n  const [excludeStr, excludeStrOnChange] = useInputTextSetup();\n  const [excludeNo, setExcludeNo] = useInputCheckboxSetup();\n  const [excludeMaybe, setExcludeMaybe] = useInputCheckboxSetup();\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      setSearchResults(\n        performSearch({\n          cocktails,\n          ingredientsAvailability,\n          searchCriteria: {\n            includeStr,\n            excludeStr,\n            excludeNo,\n            excludeMaybe,\n          },\n        })\n      );\n    },\n    [\n      ingredientsAvailability,\n      cocktails,\n      excludeMaybe,\n      excludeNo,\n      excludeStr,\n      includeStr,\n      setSearchResults,\n    ]\n  );\n\n  return (\n    <div\n      style={{\n        background: DISCREET ? \"#FFE\" : \"lightblue\",\n        padding: \"10px\",\n        top: \"10px\",\n      }}\n    >\n      {DISCREET || <h2>Settings</h2>}\n\n      <form\n        style={{\n          display: \"flex\",\n          flexFlow: \"column\",\n          gap: \"10px\",\n          minWidth: \"400px\",\n        }}\n        onSubmit={onSubmit}\n      >\n        <input\n          type=\"text\"\n          onChange={includeStrOnChange}\n          value={includeStr}\n          placeholder=\"required ingredients (use spaces as a delimiter)\"\n        />\n\n        <input\n          type=\"text\"\n          onChange={excludeStrOnChange}\n          value={excludeStr}\n          placeholder=\"ingredients to exclude (use spaces as a delimiter)\"\n        />\n\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={excludeNo}\n            onChange={setExcludeNo}\n            id=\"exclude_no\"\n          />\n          <label htmlFor=\"exclude_no\">\n            Exclude cocktails with ingredients marked \"no\"\n          </label>\n        </div>\n\n        <div>\n          <input\n            type=\"checkbox\"\n            checked={excludeMaybe}\n            onChange={setExcludeMaybe}\n            id=\"exclude_maybe\"\n          />\n          <label htmlFor=\"exclude_maybe\">\n            Exclude cocktails with ingredients marked \"maybe\"\n          </label>\n        </div>\n\n        <button type=\"submit\">Search</button>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport function Alternatives({ alternatives }: { alternatives: string[] }) {\n  if (alternatives.length) {\n    return (\n      <span style={{ color: \"grey\" }}> (or {alternatives.join(\"/\")})</span>\n    );\n  }\n  return null;\n}\n","import React, { useCallback } from \"react\";\nimport { Availability, AvailabilitySetter, Ingredient } from \"../utils/types\";\nimport { domain } from \"../utils/utils\";\n\nexport function IngredientWithAvailability({\n  ingredientName,\n  ingredientNameWithLinks,\n  availability,\n  setIngredientAvailability,\n}: {\n  ingredientName: string;\n  ingredientNameWithLinks: Ingredient[\"ingredientNameWithLinks\"];\n  availability: Availability;\n  setIngredientAvailability: AvailabilitySetter;\n}) {\n  function translateAvailabilityAsColor() {\n    switch (availability) {\n      case \"no\":\n        return \"red\";\n      case \"maybe\":\n        return \"orange\";\n      case \"yes\":\n        return \"green\";\n      case null:\n      case undefined:\n        return \"gray\";\n    }\n  }\n\n  const incrementAvailability = useCallback(() => {\n    const newAvailability =\n      availability === \"no\" ? \"maybe\" : availability === \"maybe\" ? \"yes\" : \"no\";\n    setIngredientAvailability(ingredientName, newAvailability);\n  }, [ingredientName, availability, setIngredientAvailability]);\n\n  function buildIngredientUrl(href: string) {\n    return `https://${domain}${href}`;\n  }\n\n  return (\n    <span\n      style={{\n        textDecoration: availability === \"no\" ? \"line-through\" : \"initial\",\n      }}\n    >\n      {ingredientNameWithLinks.map((part, i) => {\n        const style = { margin: \"0 2px\" };\n        if (typeof part === \"string\") {\n          return (\n            <span style={style} key={part + i}>\n              {part}\n            </span>\n          );\n        }\n        return (\n          <a\n            style={style}\n            key={part.text + i}\n            href={buildIngredientUrl(part.href)}\n          >\n            {part.text}\n          </a>\n        );\n      })}\n      <span\n        style={{\n          padding: \"0 5px\",\n          margin: \"0 5px\",\n          borderRadius: \"5px\",\n          color: \"white\",\n          cursor: \"pointer\",\n          backgroundColor: translateAvailabilityAsColor(),\n        }}\n        onClick={incrementAvailability}\n      >\n        {availability || \"???\"}\n      </span>\n    </span>\n  );\n}\n","import React from \"react\";\nimport {\n  AvailabilitiesMap,\n  AvailabilitySetter,\n  Cocktail,\n} from \"../utils/types\";\nimport { DISCREET, domain, flattenIngredientName } from \"../utils/utils\";\nimport { Alternatives } from \"./Alternatives\";\nimport { IngredientWithAvailability } from \"./IngredientWithAvailability\";\n\nexport function CocktailCard({\n  cocktail,\n  ingredientsAvailability,\n  setIngredientAvailability,\n}: {\n  cocktail: Cocktail;\n  ingredientsAvailability: AvailabilitiesMap;\n  setIngredientAvailability: AvailabilitySetter;\n}) {\n  return (\n    <div\n      style={{\n        maxWidth: \"500px\",\n        background: \"#FFE\",\n        padding: \"5px\",\n        margin: \"5px\",\n      }}\n    >\n      <img\n        style={{ height: DISCREET ? \"1rem\" : \"4rem\", float: \"right\" }}\n        src={`https://${domain}/${cocktail.imgSrc}`}\n        alt=\"\"\n      />\n      <h4\n        style={{\n          margin: 0,\n          ...(DISCREET ? { fontSize: \"1rem\", fontWeight: \"normal\" } : null),\n        }}\n      >\n        {cocktail.name}\n        <a\n          style={{ fontSize: \"0.9rem\", marginLeft: \"5px\" }}\n          href={`https://${domain}${cocktail.url}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          link\n        </a>\n      </h4>\n\n      <ul>\n        {cocktail.ingredients.map(\n          ({ amount, ingredientNameWithLinks, alternateIngredientsNames }) => {\n            const ingredientName = flattenIngredientName(\n              ingredientNameWithLinks\n            );\n            return (\n              <li key={ingredientName}>\n                {amount}{\" \"}\n                <IngredientWithAvailability\n                  ingredientName={ingredientName}\n                  ingredientNameWithLinks={ingredientNameWithLinks}\n                  availability={ingredientsAvailability[ingredientName]}\n                  setIngredientAvailability={setIngredientAvailability}\n                />\n                <Alternatives alternatives={alternateIngredientsNames} />\n              </li>\n            );\n          }\n        )}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  AvailabilitiesMap,\n  Availability,\n  AvailabilitySetter,\n  Cocktail,\n  FilterMode,\n} from \"../utils/types\";\nimport { flattenIngredientName } from \"../utils/utils\";\nimport { CocktailCard } from \"./CocktailCard\";\n\nexport function CocktailsTable({\n  cocktails,\n  ingredientsAvailability,\n  setIngredientAvailability,\n  ingredientsFilterMode,\n}: {\n  cocktails: Cocktail[];\n  ingredientsAvailability: AvailabilitiesMap;\n  setIngredientAvailability: AvailabilitySetter;\n  ingredientsFilterMode: FilterMode;\n}) {\n  return (\n    <div\n      style={{\n        background: \"lightgray\",\n        width: \"100%\",\n        display: \"flex\",\n        flexFlow: \"row wrap\",\n        justifyContent: \"flex-start\",\n      }}\n    >\n      {cocktails\n        .filter(({ ingredients }) => {\n          if (ingredientsFilterMode === \"all\") return true;\n          return ingredients.every(({ ingredientNameWithLinks }) => {\n            const availability: Availability | null =\n              ingredientsAvailability[\n                flattenIngredientName(ingredientNameWithLinks)\n              ] || null;\n            return (\n              availability === null ||\n              availability === \"yes\" ||\n              (availability === \"maybe\" &&\n                ingredientsFilterMode === \"yes_or_maybe\")\n            );\n          });\n        })\n        .map((cocktail) => {\n          return (\n            <CocktailCard\n              key={cocktail.name}\n              cocktail={cocktail}\n              ingredientsAvailability={ingredientsAvailability}\n              setIngredientAvailability={setIngredientAvailability}\n            />\n          );\n        })}\n    </div>\n  );\n}\n","import React, { useCallback, useState } from \"react\";\nimport {\n  persistIngredientsAvailability,\n  readIngredientsAvailabilityFromPersistence,\n} from \"../utils/storage\";\nimport { AvailabilitiesMap, Cocktail, FilterMode } from \"../utils/types\";\nimport { SettingsOverlay } from \"./SettingsOverlay\";\nimport { CocktailsTable } from \"./variousComponents\";\n\nexport function BigAppWrapper({ cocktails }: { cocktails: Cocktail[] }) {\n  const [ingredientsAvailability, setIngredientsAvailability] =\n    useState<AvailabilitiesMap>(readIngredientsAvailabilityFromPersistence());\n  const [ingredientsFilterMode, setIngredientsFilterMode] =\n    useState<FilterMode>(\"all\");\n  const [searchResults, setSearchResults] = useState<Cocktail[]>(cocktails);\n\n  const setIngredientAvailability = useCallback(\n    (ingredientName, availability) => {\n      const newMap = {\n        ...ingredientsAvailability,\n        [ingredientName]: availability,\n      };\n      setIngredientsAvailability(newMap);\n      setTimeout(() => {\n        persistIngredientsAvailability(newMap);\n      }, 50);\n    },\n    [ingredientsAvailability]\n  );\n\n  return (\n    <div>\n      <SettingsOverlay\n        {...{ cocktails, ingredientsAvailability, setSearchResults }}\n      />\n      <CocktailsTable\n        cocktails={searchResults}\n        {...{\n          ingredientsAvailability,\n          setIngredientAvailability,\n          ingredientsFilterMode,\n          setIngredientsFilterMode,\n        }}\n      />\n    </div>\n  );\n}\n","import { AvailabilitiesMap } from \"./types\";\n\nexport function persistIngredientsAvailability(\n  ingredientsAvailability: AvailabilitiesMap\n) {\n  localStorage.setItem(\n    \"availabilities\",\n    JSON.stringify(ingredientsAvailability)\n  );\n}\n\nexport function readIngredientsAvailabilityFromPersistence(): AvailabilitiesMap {\n  return JSON.parse(localStorage.getItem(\"availabilities\") || \"{}\");\n}\n\n","import React from \"react\";\nimport db from \"../db.json\";\nimport { Cocktail } from \"../utils/types\";\nimport { DISCREET } from \"../utils/utils\";\nimport { BigAppWrapper } from \"./BigAppWrapper\";\n\nfunction App() {\n  return (\n    <div style={{ padding: \"30px\" }}>\n      {DISCREET || <h1>Cocktails database</h1>}\n      <BigAppWrapper cocktails={db as Cocktail[]} />\n    </div>\n  );\n}\nif (DISCREET) {\n  document.body.style.background = \"white\";\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/style.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}